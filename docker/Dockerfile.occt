# Build OpenCascade Technology (OCCT)
ARG BASE_IMAGE

FROM ${BASE_IMAGE} AS build

# Add metadata
LABEL description="OpenCascade Technology (OCCT) build for KiCad AppImage"

# Copy OCCT source from build context
COPY --from=occt-src . /tmp/occt

WORKDIR /tmp/occt
RUN <<'EOS'
    mkdir build
    cd build
    cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release \
        -DFREETYPE_INCLUDE_DIR=/usr/include/freetype2 \
        -DINSTALL_CMAKE_DATA_DIR:PATH=lib/x86_64/opencascade \
        -DINSTALL_DIR_LIB:PATH=lib/x86_64 \
        -DINSTALL_DIR_CMAKE:PATH=lib/x86_64/cmake/opencascade \
        -DUSE_RAPIDJSON:BOOL=ON \
        -DUSE_TBB:BOOL=ON \
        -DCHOSEN_IMPORT_CONF=NONE \
        -D3RDPARTY_TBB_LIBRARY_DIR:PATH=/usr/lib/x86_64-linux-gnu \
        -D3RDPARTY_TBBMALLOC_LIBRARY_DIR:PATH=/usr/lib/x86_64-linux-gnu \
        -DUSE_DRACO:BOOL=OFF \
        -DUSE_FFMPEG:BOOL=OFF \
        -DUSE_FREEIMAGE:BOOL=ON \
        -DUSE_FREETYPE:BOOL=OFF \
        -DUSE_OPENGL:BOOL=OFF \
        -DUSE_OPENVR:BOOL=OFF \
        -DUSE_TK:BOOL=OFF \
        -DUSE_VTK:BOOL=OFF \
        -DUSE_XLIB:BOOL=OFF \
        -DBUILD_RELEASE_DISABLE_EXCEPTIONS:BOOL=ON \
        -DBUILD_MODULE_Draw:BOOL=OFF \
        -DBUILD_MODULE_Visualization:BOOL=OFF \
        ..
EOS

RUN ninja -C build --quiet -j$(nproc)
RUN DESTDIR=/tmp/rootfs cmake --install build

FROM scratch
COPY --from=build /tmp/rootfs /