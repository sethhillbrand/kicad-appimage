# Base image containing common build dependencies for KiCad AppImage builds
FROM debian:bookworm

LABEL maintainer="KiCad AppImage Team"
LABEL description="Base build environment for KiCad AppImage"

# Install build dependencies and clean apt cache in a single layer
RUN <<-EOPKG
    apt-get update
apt-get install -y --no-install-recommends \
    autoconf automake bison build-essential \
    ca-certificates cmake \
    curl \
    desktop-file-utils \
    dpkg-dev \
    fakeroot \
    file \
    flex \
    gettext \
    git \
    libboost-all-dev \
    libbz2-dev \
    libc6-dev \
    libcairo2-dev \
    libcurl4-gnutls-dev \
    libfreeimage-dev \
    libfreetype-dev \
    libgit2-dev \
    libgl1-mesa-dev \
    libglew-dev \
    libglm-dev \
    libglu1-mesa-dev \
    libgtk-3-dev \
    libnng-dev \
    libpoppler-dev libpoppler-glib-dev \
    libprotobuf-dev \
    libsecret-1-dev \
    libspnav-dev \
    libtbb-dev \
    libtool \
    libwebkit2gtk-4.0-dev \
    libx11-dev \
    libxext-dev \
    libxi-dev \
    libxmu-dev \
    libzint-dev \
    libzstd-dev \
    mesa-common-dev \
    ninja-build \
    patchelf \
    pkg-config \
    protobuf-compiler \
    python-is-python3 \
    python3-dev \
    python3-pip \
    python3-requests \
    python3-setuptools \
    python3-venv \
    python3-wheel \
    rapidjson-dev \
    shared-mime-info \
    squashfs-tools \
    strace \
    swig4.0 \
    tcl-dev \
    tk-dev \
    unixodbc-dev \
    wget \
    zlib1g-dev \
    zsync
    # Clean up to reduce image size
    apt-get clean autoclean
    apt-get autoremove -y
    rm -rf /var/lib/apt/lists/*
    # Upgrade pip and install essential Python packages
    python3 -m pip install --break-system-packages --upgrade pip setuptools wheel build packaging
EOPKG

# Helper script to install KiCad library data into a temporary prefix
COPY --chmod=755 <<'EOS' /build-library.sh
#!/bin/bash
set -euo pipefail
mkdir -p /tmp/build/linux
cd /tmp/build/linux
cmake \
  -G Ninja \
  -DCMAKE_RULE_MESSAGES=OFF \
  -DCMAKE_VERBOSE_MAKEFILE=OFF \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DCMAKE_INSTALL_MESSAGE=NEVER \
  /src
ninja
cmake --install . --prefix=/usr/installtemp/
EOS

# Set up proper environment
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1